// Generated by Dagger (https://dagger.dev).
package com.ilinskiy.watchlist.presentation;

import com.ilinskiy.watchlist.domain.usecase.WatchListUseCases;
import com.kursatkumsuz.watchlist.domain.usecase.WatchListUseCases;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WatchListViewModel_Factory implements Factory<WatchListViewModel> {
  private final Provider<WatchListUseCases> watchListUseCasesProvider;

  public WatchListViewModel_Factory(Provider<WatchListUseCases> watchListUseCasesProvider) {
    this.watchListUseCasesProvider = watchListUseCasesProvider;
  }

  @Override
  public WatchListViewModel get() {
    return newInstance(watchListUseCasesProvider.get());
  }

  public static WatchListViewModel_Factory create(
      Provider<WatchListUseCases> watchListUseCasesProvider) {
    return new WatchListViewModel_Factory(watchListUseCasesProvider);
  }

  public static WatchListViewModel newInstance(WatchListUseCases watchListUseCases) {
    return new WatchListViewModel(watchListUseCases);
  }
}
