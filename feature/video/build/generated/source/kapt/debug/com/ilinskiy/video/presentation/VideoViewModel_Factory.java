// Generated by Dagger (https://dagger.dev).
package com.ilinskiy.video.presentation;

import androidx.lifecycle.SavedStateHandle;

import com.ilinskiy.video.domain.usecase.GetMovieVideoUseCase;
import com.kursatkumsuz.video.domain.usecase.GetMovieVideoUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VideoViewModel_Factory implements Factory<VideoViewModel> {
  private final Provider<SavedStateHandle> savedStateHandleProvider;

  private final Provider<GetMovieVideoUseCase> getMovieVideoUseCaseProvider;

  public VideoViewModel_Factory(Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<GetMovieVideoUseCase> getMovieVideoUseCaseProvider) {
    this.savedStateHandleProvider = savedStateHandleProvider;
    this.getMovieVideoUseCaseProvider = getMovieVideoUseCaseProvider;
  }

  @Override
  public VideoViewModel get() {
    return newInstance(savedStateHandleProvider.get(), getMovieVideoUseCaseProvider.get());
  }

  public static VideoViewModel_Factory create(Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<GetMovieVideoUseCase> getMovieVideoUseCaseProvider) {
    return new VideoViewModel_Factory(savedStateHandleProvider, getMovieVideoUseCaseProvider);
  }

  public static VideoViewModel newInstance(SavedStateHandle savedStateHandle,
      GetMovieVideoUseCase getMovieVideoUseCase) {
    return new VideoViewModel(savedStateHandle, getMovieVideoUseCase);
  }
}
