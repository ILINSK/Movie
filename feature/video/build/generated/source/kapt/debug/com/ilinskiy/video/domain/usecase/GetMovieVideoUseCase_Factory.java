// Generated by Dagger (https://dagger.dev).
package com.ilinskiy.video.domain.usecase;

import com.ilinskiy.video.domain.repository.VideoRepository;
import com.kursatkumsuz.video.domain.repository.VideoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetMovieVideoUseCase_Factory implements Factory<GetMovieVideoUseCase> {
  private final Provider<VideoRepository> videoRepositoryProvider;

  public GetMovieVideoUseCase_Factory(Provider<VideoRepository> videoRepositoryProvider) {
    this.videoRepositoryProvider = videoRepositoryProvider;
  }

  @Override
  public GetMovieVideoUseCase get() {
    return newInstance(videoRepositoryProvider.get());
  }

  public static GetMovieVideoUseCase_Factory create(
      Provider<VideoRepository> videoRepositoryProvider) {
    return new GetMovieVideoUseCase_Factory(videoRepositoryProvider);
  }

  public static GetMovieVideoUseCase newInstance(VideoRepository videoRepository) {
    return new GetMovieVideoUseCase(videoRepository);
  }
}
